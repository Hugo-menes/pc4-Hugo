@{
    ViewData["Title"] = "Análisis de Recomendaciones para 3 Platos Top";
    var ratings = ViewData["ratings"] as List<(int productoId, float normalizedScore)>;
    var trendingProductos = ViewData["trendingproductos"] as List<pc4_ml.Models.Producto>;
}

<h1>@ViewData["Title"]</h1>

<form asp-controller="ML" asp-action="PredictTop3" method="post">
    <div class="form-group">
        <label for="id">Escribe el Id del usuario</label>
        <input type="text" class="form-control" id="id" name="id" />
    </div>
    <button type="submit" class="btn btn-primary">Enviar</button>
</form>

@if (ratings != null && ratings.Count > 0)
{
    // Ordena las calificaciones por puntuación normalizada en orden descendente
    var sortedRatings = ratings.OrderByDescending(r => r.normalizedScore).ToList();
    
    <h2>Recomendaciones de Productos</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Producto ID</th>
                <th>Producto Nombre</th>
                <th>Score Normalizado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var rating in sortedRatings)
            {
                var producto = trendingProductos.FirstOrDefault(p => p.ProductoId == rating.productoId);
                <tr>
                    <td>@rating.productoId</td>
                    <td>@producto?.ProductoNombre</td>
                    <td>@rating.normalizedScore</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No hay recomendaciones para mostrar.</p>
}
